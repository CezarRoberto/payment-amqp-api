// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  post      Post[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Customer  Customer?
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String?
  published Boolean  @default(false)
  views     Int      @default(0)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id               String      @id @default(uuid())
  name             String
  description      String?
  active           Boolean     @default(true)
  price            Int
  stripe_productId String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  OrderItem        OrderItem[]
}

model Customer {
  id                 String   @id @default(uuid())
  email              String
  description        String?
  userId             String   @unique
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  stripe_customer_id String   @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  Order              Order[]
}

enum PaymentStatus {
  CREATED
  PROCESSING
  SUCCEEDED
  FAILED
}

model Order {
  id            String        @id @default(uuid())
  customerId    String
  customer      Customer      @relation(fields: [customerId], references: [id])
  totalAmount   Int
  paymentStatus PaymentStatus @default(CREATED)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  orderId   String
  unitPrice Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
